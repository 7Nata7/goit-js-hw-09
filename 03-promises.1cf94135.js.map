{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGcC,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBAC1BD,SAASC,cAAc,mBACpBD,SAASC,cAAc,UAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA4BQJ,SAASC,cAAc,SAC/BU,iBAAiB,UAzBA,SAAAC,GACpBA,EAAEC,iBACGD,EAAEE,OAAOC,QAMlB,IAJI,IAEmBC,EAAfJ,EAAEK,cADJC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGtBC,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,IACjCpB,EAAcoB,EAAGH,EAAMI,OACtBC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAuCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEvEe,EAAMI,MAAQS,SAASb,EAAMI,OAASS,SAASZ,EAAKG,OAEtDX,EAAEK,cAAcgB,QAChBd,EAAMI,MAAQ,GACdH,EAAKG,MAAQ,GACbF,EAAOE,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  stepDelay: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n    })\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!e.target.tagName === 'BUTTON') return;\n\n    const {\n      elements: { delay, step, amount },\n    } = e.currentTarget\n\nfor (let i = 1; i <= amount.value; i++) {\n  createPromise(i, delay.value)\n  .then(({ position, delay}) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n  delay.value = parseInt(delay.value) + parseInt(step.value)\n}\ne.currentTarget.reset();\ndelay.value = '';\nstep.value = '';\namount.value = '';\n}\n\nconst formEl = document.querySelector('.form')\nformEl.addEventListener('submit', submitHandler);\n\n\n\n// import Notiflix from 'notiflix';\n\n// const refs = {\n//   firstDelay: document.querySelector('[name=\"delay\"]'),\n//   stepDelay: document.querySelector('[name=\"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n//   submitBtn: document.querySelector('button'),\n// }\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay })\n//       } else {\n//         reject({ position, delay })\n//       }\n//     }, delay)\n//     })\n//   }\n\n//   const submitHandler = e => {\n//     e.preventDefault();\n//     if (!e.target.tagName === 'BUTTON') return;\n\n//     const {\n//       elements: { delay, step, amount },\n//     } = e.currentTarget\n\n// for (let i = 1; i <= amount; i++) {\n//   createPromise(i, firstDelay)\n//   .then(({ position, delay}) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   })\n//   firstDelay += stepDelay\n// }\n// e.currentTarget.reset();\n//   }\n\n//   const formEl = document.querySelector('.form')\n//   formEl.addEventListener('submit', submitHandler);"],"names":["$6JpON","parcelRequire","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","target","tagName","_elements","currentTarget","elements","delay1","step","amount","i","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","parseInt","reset"],"version":3,"file":"03-promises.1cf94135.js.map"}